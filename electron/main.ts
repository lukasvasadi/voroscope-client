import { app, BrowserWindow, ipcMain } from "electron"

/**
 * The following allows TypeScript to get the magic constants auto-generated by the Forge Webpack
 * plugin, which inform Electron where to look for the Webpack-bundled app code (depending on
 * whether development or production)
 */
declare const MAIN_WINDOW_WEBPACK_ENTRY: string
declare const MAIN_WINDOW_PRELOAD_WEBPACK_ENTRY: string

process.env.ELECTRON_DISABLE_SECURITY_WARNINGS = "true" // Disable security warnings in console

// Handle creating/removing shortcuts on Windows when installing/uninstalling
if (require("electron-squirrel-startup")) {
  app.quit()
}

const createWindow = (): void => {
  // Create the browser window
  const mainWindow = new BrowserWindow({
    height: 900,
    width: 1200,
    resizable: false,
    webPreferences: {
      preload: MAIN_WINDOW_PRELOAD_WEBPACK_ENTRY,
    },
  })

  // Load the html
  mainWindow.loadURL(MAIN_WINDOW_WEBPACK_ENTRY)

  // Open DevTools
  mainWindow.webContents.openDevTools({ mode: "detach" })
}

async function registerListeners() {
  /**
   * From bridge integration
   * Check preload.ts for more details
   */
  ipcMain.on("message", (_, message) => {
    console.log(message)
  })
}

/**
 * This method will be called when Electron has finished
 * initialization and is ready to create browser windows
 *
 * Some APIs can only be used after this event occurs
 */
app.on("ready", createWindow)

/**
 * Quit when all windows are closed, except on macOS, where it is common
 * for applications and their menu bars to remain active until the user quits
 * explicitly with Cmd + Q
 */
app.on("window-all-closed", () => {
  if (process.platform !== "darwin") {
    app.quit()
  }
})

app.on("activate", () => {
  /**
   * On OS X itis common to re-create a window in the app when the
   * dock icon is clicked and there are no other windows open
   */
  if (BrowserWindow.getAllWindows().length === 0) {
    createWindow()
  }
})
